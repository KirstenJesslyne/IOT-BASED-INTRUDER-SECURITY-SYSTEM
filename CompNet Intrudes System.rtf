{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red24\green24\blue24;\red193\green193\blue193;
\red183\green111\blue179;\red70\green137\blue204;\red194\green126\blue101;\red140\green211\blue254;\red202\green202\blue202;
\red167\green197\blue152;\red212\green214\blue154;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;
\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;\cssrgb\c80784\c56863\c47059;\cssrgb\c61176\c86275\c99608;\cssrgb\c83137\c83137\c83137;
\cssrgb\c70980\c80784\c65882;\cssrgb\c86275\c86275\c66667;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /*************************************************************\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * ESP32 Intruder Detection System with Blynk\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Virtual Pin Assignment:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - V0: Red LED (Intruder Status)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - V1: Green LED (System Status)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - V2: Blue LED (Blynk Connection)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - V5: Buzzer Control Switch\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Blynk Template Configuration:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * - Required for Blynk.Cloud\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  *************************************************************/\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  BLYNK_TEMPLATE_ID \cf7 \strokec7 "TMPL6vbqfhpl6"\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  BLYNK_TEMPLATE_NAME \cf7 \strokec7 "Intruder Burglary System"\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  BLYNK_AUTH_TOKEN \cf7 \strokec7 "6tN40c9LCumQyXID5Qvs4SMZDM-wwbWs"\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <WiFi.h>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <WiFiClient.h>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <BlynkSimpleEsp32.h>\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // ==== WiFi Configuration ====\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 char\cf4 \strokec4  \cf8 \strokec8 ssid\cf4 \strokec4 [] \cf9 \strokec9 =\cf4 \strokec4  \cf7 \strokec7 "keii"\cf4 \strokec4 ;\cb1 \
\cf6 \cb3 \strokec6 char\cf4 \strokec4  \cf8 \strokec8 pass\cf4 \strokec4 [] \cf9 \strokec9 =\cf4 \strokec4  \cf7 \strokec7 "lalalala"\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Hardware Pins\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  RED_PIN     \cf10 \strokec10 16\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  GREEN_PIN   \cf10 \strokec10 17\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  BLUE_BLYNK  \cf10 \strokec10 12\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  TRIG_PIN    \cf10 \strokec10 26\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  ECHO_PIN    \cf10 \strokec10 25\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  BUZZER_PIN  \cf10 \strokec10 14\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Constants\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  SOUND_SPEED \cf10 \strokec10 0.034\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  DISTANCE_THRESHOLD \cf10 \strokec10 50\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #define\cf6 \strokec6  BLYNK_BLINK_INTERVAL \cf10 \strokec10 500\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Global Variables\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 distance\cf4 \strokec4 ;\cb1 \
\cf6 \cb3 \strokec6 bool\cf4 \strokec4  \cf8 \strokec8 isBlynkConnected\cf4 \strokec4  \cf9 \strokec9 =\cf4 \strokec4  \cf6 \strokec6 false\cf4 \strokec4 ;\cb1 \
\cf6 \cb3 \strokec6 bool\cf4 \strokec4  \cf8 \strokec8 systemEnabled\cf4 \strokec4  \cf9 \strokec9 =\cf4 \strokec4  \cf6 \strokec6 true\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // Blynk Handlers\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 BLYNK_CONNECTED\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 isBlynkConnected\cf4 \strokec4  \cf9 \strokec9 =\cf4 \strokec4  \cf6 \strokec6 true\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 syncVirtual\cf4 \strokec4 (V5);\cf2 \strokec2   // Sync switch state\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V2, \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 println\cf4 \strokec4 (\cf7 \strokec7 "Connected to Blynk"\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 BLYNK_DISCONNECTED\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 isBlynkConnected\cf4 \strokec4  \cf9 \strokec9 =\cf4 \strokec4  \cf6 \strokec6 false\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V2, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 println\cf4 \strokec4 (\cf7 \strokec7 "Disconnected from Blynk"\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 BLYNK_WRITE\cf4 \strokec4 (V5) \{\cf2 \strokec2   // Master Switch\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   systemEnabled \cf9 \strokec9 =\cf4 \strokec4  \cf8 \strokec8 param\cf4 \strokec4 .\cf11 \strokec11 asInt\cf4 \strokec4 ();\cb1 \
\cb3   \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 println\cf4 \strokec4 (systemEnabled \cf9 \strokec9 ?\cf4 \strokec4  \cf7 \strokec7 "System ENABLED"\cf4 \strokec4  \cf9 \strokec9 :\cf4 \strokec4  \cf7 \strokec7 "System DISABLED"\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (\cf9 \strokec9 !\cf4 \strokec4 systemEnabled) \{\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 RED_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 GREEN_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BUZZER_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V0, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V1, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3   \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 GREEN_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V1, \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf11 \strokec11 setup\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 begin\cf4 \strokec4 (\cf10 \strokec10 115200\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // Initialize pins\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf11 \strokec11 pinMode\cf4 \strokec4 (\cf6 \strokec6 RED_PIN\cf4 \strokec4 , OUTPUT);\cb1 \
\cb3   \cf11 \strokec11 pinMode\cf4 \strokec4 (\cf6 \strokec6 GREEN_PIN\cf4 \strokec4 , OUTPUT);\cb1 \
\cb3   \cf11 \strokec11 pinMode\cf4 \strokec4 (\cf6 \strokec6 BLUE_BLYNK\cf4 \strokec4 , OUTPUT);\cb1 \
\cb3   \cf11 \strokec11 pinMode\cf4 \strokec4 (\cf6 \strokec6 TRIG_PIN\cf4 \strokec4 , OUTPUT);\cb1 \
\cb3   \cf11 \strokec11 pinMode\cf4 \strokec4 (\cf6 \strokec6 ECHO_PIN\cf4 \strokec4 , INPUT);\cb1 \
\cb3   \cf11 \strokec11 pinMode\cf4 \strokec4 (\cf6 \strokec6 BUZZER_PIN\cf4 \strokec4 , OUTPUT);\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // Initial states\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 RED_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3   \cf8 \strokec8 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 GREEN_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3   \cf8 \strokec8 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BLUE_BLYNK\cf4 \strokec4 , HIGH);\cb1 \
\cb3   \cf8 \strokec8 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BUZZER_PIN\cf4 \strokec4 , LOW);\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // WiFi Configuration\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 WiFi\cf4 \strokec4 .\cf11 \strokec11 setAutoReconnect\cf4 \strokec4 (\cf6 \strokec6 true\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 WiFi\cf4 \strokec4 .\cf11 \strokec11 persistent\cf4 \strokec4 (\cf6 \strokec6 true\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // Initialize Blynk\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 begin\cf4 \strokec4 (\cf6 \strokec6 BLYNK_AUTH_TOKEN\cf4 \strokec4 , ssid, pass);\cb1 \
\cb3   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // Initialize Blynk widgets\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V0, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V1, \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V2, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 println\cf4 \strokec4 (\cf7 \strokec7 "System Initialized"\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf11 \strokec11 loop\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 run\cf4 \strokec4 ();\cb1 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (systemEnabled) \{\cb1 \
\cb3     \cf11 \strokec11 updateConnectionLED\cf4 \strokec4 ();\cb1 \
\cb3     \cf11 \strokec11 checkIntruder\cf4 \strokec4 ();\cb1 \
\cb3   \}\cb1 \
\cb3   \cf11 \strokec11 delay\cf4 \strokec4 (\cf10 \strokec10 200\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf11 \strokec11 updateConnectionLED\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 static\cf4 \strokec4  \cf6 \strokec6 unsigned\cf4 \strokec4  \cf6 \strokec6 long\cf4 \strokec4  lastBlink \cf9 \strokec9 =\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf6 \strokec6 static\cf4 \strokec4  \cf6 \strokec6 bool\cf4 \strokec4  blinkState \cf9 \strokec9 =\cf4 \strokec4  \cf6 \strokec6 false\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf5 \strokec5 if\cf4 \strokec4  (isBlynkConnected) \{\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf11 \strokec11 millis\cf4 \strokec4 () \cf9 \strokec9 -\cf4 \strokec4  lastBlink \cf9 \strokec9 >\cf4 \strokec4  \cf6 \strokec6 BLYNK_BLINK_INTERVAL\cf4 \strokec4 ) \{\cb1 \
\cb3       blinkState \cf9 \strokec9 =\cf4 \strokec4  \cf9 \strokec9 !\cf4 \strokec4 blinkState;\cb1 \
\cb3       \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BLUE_BLYNK\cf4 \strokec4 , blinkState);\cb1 \
\cb3       lastBlink \cf9 \strokec9 =\cf4 \strokec4  \cf11 \strokec11 millis\cf4 \strokec4 ();\cb1 \
\cb3     \}\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V2, blinkState);\cb1 \
\cb3   \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BLUE_BLYNK\cf4 \strokec4 , HIGH);\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V2, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf11 \strokec11 checkIntruder\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // Measure distance\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 TRIG_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3   \cf11 \strokec11 delayMicroseconds\cf4 \strokec4 (\cf10 \strokec10 2\cf4 \strokec4 );\cb1 \
\cb3   \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 TRIG_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3   \cf11 \strokec11 delayMicroseconds\cf4 \strokec4 (\cf10 \strokec10 10\cf4 \strokec4 );\cb1 \
\cb3   \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 TRIG_PIN\cf4 \strokec4 , LOW);\cb1 \
\
\cb3   \cf6 \strokec6 long\cf4 \strokec4  duration \cf9 \strokec9 =\cf4 \strokec4  \cf11 \strokec11 pulseIn\cf4 \strokec4 (\cf6 \strokec6 ECHO_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3   distance \cf9 \strokec9 =\cf4 \strokec4  duration \cf9 \strokec9 *\cf4 \strokec4  \cf6 \strokec6 SOUND_SPEED\cf4 \strokec4  \cf9 \strokec9 /\cf4 \strokec4  \cf10 \strokec10 2\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 print\cf4 \strokec4 (\cf7 \strokec7 "Distance: "\cf4 \strokec4 ); \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 print\cf4 \strokec4 (distance); \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 println\cf4 \strokec4 (\cf7 \strokec7 " cm"\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // Intruder detection\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  (distance \cf9 \strokec9 >\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4  \cf9 \strokec9 &&\cf4 \strokec4  distance \cf9 \strokec9 <\cf4 \strokec4  \cf6 \strokec6 DISTANCE_THRESHOLD\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf8 \strokec8 Serial\cf4 \strokec4 .\cf11 \strokec11 println\cf4 \strokec4 (\cf7 \strokec7 "\uc0\u55357 \u57000  Intruder detected!"\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 RED_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 GREEN_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BUZZER_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V0, \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V1, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 logEvent\cf4 \strokec4 (\cf7 \strokec7 "intruder_alert"\cf4 \strokec4 , \cf7 \strokec7 "Intruder detected!"\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 delay\cf4 \strokec4 (\cf10 \strokec10 500\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BUZZER_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3   \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 RED_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 GREEN_PIN\cf4 \strokec4 , HIGH);\cb1 \
\cb3     \cf11 \strokec11 digitalWrite\cf4 \strokec4 (\cf6 \strokec6 BUZZER_PIN\cf4 \strokec4 , LOW);\cb1 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V0, \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\cb3     \cf8 \strokec8 Blynk\cf4 \strokec4 .\cf11 \strokec11 virtualWrite\cf4 \strokec4 (V1, \cf10 \strokec10 1\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
}